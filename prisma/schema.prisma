generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model musics {
  id              Int               @id(map: "musics_pk") @default(autoincrement())
  name            String            @db.VarChar(255)
  duration        String            @db.VarChar(255)
  createdAt       DateTime          @default(dbgenerated("'2023-01-25'::date")) @db.Date
  updatedAt       DateTime          @default(dbgenerated("'2023-01-25'::date")) @db.Date
  musicsPlaylists musicsPlaylists[]
}

model musicsPlaylists {
  id         Int       @id(map: "musicsPlaylists_pk") @default(autoincrement())
  playlistId Int
  musicsId   Int
  createdAt  DateTime  @default(dbgenerated("'2023-01-25'::date")) @db.Date
  updatedAt  DateTime  @default(dbgenerated("'2023-01-25'::date")) @db.Date
  musics     musics    @relation(fields: [musicsId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "musicsPlaylists_fk1")
  playlists  playlists @relation(fields: [playlistId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "musicsPlaylists_fk0")
}

model playlists {
  id              Int               @id(map: "playlists_pk") @default(autoincrement())
  userId          Int
  name            String            @db.VarChar(255)
  band            String            @db.VarChar(255)
  duration        String            @db.VarChar(255)
  createdAt       DateTime          @default(dbgenerated("'2023-01-25'::date")) @db.Date
  updatedAt       DateTime          @default(dbgenerated("'2023-01-25'::date")) @db.Date
  users           users             @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "playlists_fk0")
  musicsPlaylists musicsPlaylists[]
}

model sessions {
  id        Int      @id(map: "sessions_pk") @default(autoincrement())
  userId    Int
  token     String   @db.VarChar(255)
  createdAt DateTime @default(dbgenerated("'2023-01-25'::date")) @db.Date
  updatedAt DateTime @default(dbgenerated("'2023-01-25'::date")) @db.Date
  users     users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sessions_fk0")
}

model users {
  id           Int         @id(map: "users_pk") @default(autoincrement())
  email        String      @unique @db.VarChar(255)
  passwordHash String      @db.VarChar(255)
  createdAt    DateTime    @default(dbgenerated("'2023-01-25'::date")) @db.Date
  updatedAt    DateTime    @default(dbgenerated("'2023-01-25'::date")) @db.Date
  playlists    playlists[]
  sessions     sessions[]
}
